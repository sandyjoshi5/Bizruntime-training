<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:soap="http://cxf.apache.org/bindings/soap"
       xmlns:cus="http://demo.fusesource.com/wsdl/CustomerService/"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf
       http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">


	  <import resource="classpath:META-INF/cxf/cxf.xml" />
	  
     
  <cxf:cxfEndpoint id="customer-ws"
  address="http://0.0.0.0:8192/CustomerService"
  endpointName="SOAPOverHTTP"
  serviceName="CustomerService"
  wsdlURL="wsdl/CustomerService.wsdl"
  serviceClass="com.fusesource.customerwscamelcxfprovider.SAXSourceService"  
  xmlns="http://demo.fusesource.com/wsdl/CustomerService/"/>  
  
    <camelContext xmlns="http://camel.apache.org/schema/spring">
  
  <route>
            <from uri="cxf:bean:customer-ws"/>
            <choice>
                <when>
                    <simple>${in.header.operationName} == 'updateCustomer'</simple>
                    <log message="Placing update customer message onto queue."/>
                    <inOnly uri="activemq:queue:CustomerUpdates?jmsMessageType=Text"/>
                    <transform>
                        <constant>
                            <![CDATA[
                              <ns2:updateCustomerResponse xmlns:ns2="http://demo.fusesource.com/wsdl/CustomerService/"/>
                            ]]>
                        </constant>
                    </transform>
                    <convertBodyTo type="javax.xml.transform.sax.SAXSource"/>
                </when>
                <when>
                    <simple>${in.header.operationName} == 'lookupCustomer'</simple>
                    <setHeader headerName="customerId">
                        <xpath resultType="java.lang.String">/cus:lookupCustomer/customerId</xpath>
                    </setHeader>
                    <to uri="lookupCustomer"/>
                    <to uri="velocity:lookupCustomerResponse.vm"/>
                    <convertBodyTo type="javax.xml.transform.sax.SAXSource"/>
                </when>
                <when>
                    <simple>${in.header.operationName} == 'getCustomerStatus'</simple>
                    <setHeader headerName="customerId">
                        <xpath resultType="java.lang.String">/cus:getCustomerStatus/customerId</xpath>
                    </setHeader>
                    <to uri="getCustomerStatus"/>
                    <to uri="velocity:getCustomerStatusResponse.vm"/>
                    <convertBodyTo type="javax.xml.transform.sax.SAXSource"/>
                </when>
            </choice>
        </route>
  
  </camelContext>

 <bean id="cxfPayloadProcessor" class="com.fusesource.customerwscamelcxfprovider.CxfPayloadProcessor"/>

    <bean id="getCustomerStatus" class="com.fusesource.customerwscamelcxfprovider.GetCustomerStatus"/>

    <bean id="lookupCustomer" class="com.fusesource.customerwscamelcxfprovider.LookupCustomer"/>

    <!-- <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean -->
</beans>
